<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<blanco-db>
<query-iterator name="SimpleCategoriesSelect" single="true">
<parameters>
<parameter name="categoryID" type="int"/>
</parameters>
<query><![CDATA[SELECT CategoryID, CategoryName
  FROM "Categories"
 WHERE CategoryID = #categoryID]]></query>
</query-iterator>
<query-iterator name="SimpleCategoriesSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="categoryID" type="int"/>
</parameters>
<query><![CDATA[SELECT CategoryID, CategoryName, Description, Picture
  FROM "Categories" WITH (UPDLOCK)
 WHERE CategoryID = #categoryID]]></query>
</query-iterator>
<query-iterator name="SimpleCategoriesColumnDescription" single="false">
<parameters>
<parameter name="categoryID" type="int"/>
</parameters>
<query><![CDATA[SELECT Description
 FROM "Categories"
 WHERE CategoryID = #categoryID]]></query>
</query-iterator>
<query-iterator name="SimpleCategoriesColumnPicture" single="false">
<parameters>
<parameter name="categoryID" type="int"/>
</parameters>
<query><![CDATA[SELECT Picture
 FROM "Categories"
 WHERE CategoryID = #categoryID]]></query>
</query-iterator>
<query-invoker name="SimpleCategoriesInsert" single="true">
<parameters>
<parameter name="categoryID" type="int"/>
<parameter name="categoryName" type="java.lang.String"/>
<parameter name="description" type="java.io.Reader"/>
<parameter name="picture" type="java.io.InputStream"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Categories"
       (CategoryID, CategoryName, Description, Picture)
VALUES
       (#categoryID, #categoryName, #description, #picture)]]></query>
</query-invoker>
<query-invoker name="SimpleCategoriesInsertNoNulls" single="true">
<parameters>
<parameter name="categoryID" type="int"/>
<parameter name="categoryName" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Categories"
       (CategoryID, CategoryName)
VALUES
       (#categoryID, #categoryName)]]></query>
</query-invoker>
<query-invoker name="SimpleCategoriesUpdate" single="true">
<parameters>
<parameter name="categoryName" type="java.lang.String"/>
<parameter name="description" type="java.io.Reader"/>
<parameter name="picture" type="java.io.InputStream"/>
<parameter name="whereCategoryID" type="int"/>
</parameters>
<query><![CDATA[UPDATE "Categories"
   SET CategoryName = #categoryName, Description = #description, Picture = #picture
 WHERE CategoryID = #whereCategoryID]]></query>
</query-invoker>
<query-invoker name="SimpleCategoriesDelete" single="true">
<parameters>
<parameter name="categoryID" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "Categories"
 WHERE CategoryID = #categoryID]]></query>
</query-invoker>
<query-iterator name="SimpleCustomerCustomerDemoSelect" single="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
<parameter name="customerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT CustomerID, CustomerTypeID
  FROM "CustomerCustomerDemo"
 WHERE CustomerID = #customerID
   AND CustomerTypeID = #customerTypeID]]></query>
</query-iterator>
<query-iterator name="SimpleCustomerCustomerDemoSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
<parameter name="customerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT CustomerID, CustomerTypeID
  FROM "CustomerCustomerDemo" WITH (UPDLOCK)
 WHERE CustomerID = #customerID
   AND CustomerTypeID = #customerTypeID]]></query>
</query-iterator>
<query-invoker name="SimpleCustomerCustomerDemoInsert" single="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
<parameter name="customerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "CustomerCustomerDemo"
       (CustomerID, CustomerTypeID)
VALUES
       (#customerID, #customerTypeID)]]></query>
</query-invoker>
<query-invoker name="SimpleCustomerCustomerDemoDelete" single="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
<parameter name="customerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[DELETE FROM "CustomerCustomerDemo"
 WHERE CustomerID = #customerID
   AND CustomerTypeID = #customerTypeID]]></query>
</query-invoker>
<query-iterator name="SimpleCustomerDemographicsSelect" single="true">
<parameters>
<parameter name="customerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT CustomerTypeID
  FROM "CustomerDemographics"
 WHERE CustomerTypeID = #customerTypeID]]></query>
</query-iterator>
<query-iterator name="SimpleCustomerDemographicsSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="customerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT CustomerTypeID, CustomerDesc
  FROM "CustomerDemographics" WITH (UPDLOCK)
 WHERE CustomerTypeID = #customerTypeID]]></query>
</query-iterator>
<query-iterator name="SimpleCustomerDemographicsColumnCustomerDesc" single="false">
<parameters>
<parameter name="customerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT CustomerDesc
 FROM "CustomerDemographics"
 WHERE CustomerTypeID = #customerTypeID]]></query>
</query-iterator>
<query-invoker name="SimpleCustomerDemographicsInsert" single="true">
<parameters>
<parameter name="customerTypeID" type="java.lang.String"/>
<parameter name="customerDesc" type="java.io.Reader"/>
</parameters>
<query><![CDATA[INSERT
  INTO "CustomerDemographics"
       (CustomerTypeID, CustomerDesc)
VALUES
       (#customerTypeID, #customerDesc)]]></query>
</query-invoker>
<query-invoker name="SimpleCustomerDemographicsInsertNoNulls" single="true">
<parameters>
<parameter name="customerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "CustomerDemographics"
       (CustomerTypeID)
VALUES
       (#customerTypeID)]]></query>
</query-invoker>
<query-invoker name="SimpleCustomerDemographicsUpdate" single="true">
<parameters>
<parameter name="customerDesc" type="java.io.Reader"/>
<parameter name="whereCustomerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[UPDATE "CustomerDemographics"
   SET CustomerDesc = #customerDesc
 WHERE CustomerTypeID = #whereCustomerTypeID]]></query>
</query-invoker>
<query-invoker name="SimpleCustomerDemographicsDelete" single="true">
<parameters>
<parameter name="customerTypeID" type="java.lang.String"/>
</parameters>
<query><![CDATA[DELETE FROM "CustomerDemographics"
 WHERE CustomerTypeID = #customerTypeID]]></query>
</query-invoker>
<query-iterator name="SimpleCustomersSelect" single="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax
  FROM "Customers"
 WHERE CustomerID = #customerID]]></query>
</query-iterator>
<query-iterator name="SimpleCustomersSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax
  FROM "Customers" WITH (UPDLOCK)
 WHERE CustomerID = #customerID]]></query>
</query-iterator>
<query-invoker name="SimpleCustomersInsert" single="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
<parameter name="companyName" type="java.lang.String"/>
<parameter name="contactName" type="java.lang.String"/>
<parameter name="contactTitle" type="java.lang.String"/>
<parameter name="address" type="java.lang.String"/>
<parameter name="city" type="java.lang.String"/>
<parameter name="region" type="java.lang.String"/>
<parameter name="postalCode" type="java.lang.String"/>
<parameter name="country" type="java.lang.String"/>
<parameter name="phone" type="java.lang.String"/>
<parameter name="fax" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Customers"
       (CustomerID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax)
VALUES
       (#customerID, #companyName, #contactName, #contactTitle, #address, #city, #region, #postalCode, #country, #phone, #fax)]]></query>
</query-invoker>
<query-invoker name="SimpleCustomersInsertNoNulls" single="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
<parameter name="companyName" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Customers"
       (CustomerID, CompanyName)
VALUES
       (#customerID, #companyName)]]></query>
</query-invoker>
<query-invoker name="SimpleCustomersUpdate" single="true">
<parameters>
<parameter name="companyName" type="java.lang.String"/>
<parameter name="contactName" type="java.lang.String"/>
<parameter name="contactTitle" type="java.lang.String"/>
<parameter name="address" type="java.lang.String"/>
<parameter name="city" type="java.lang.String"/>
<parameter name="region" type="java.lang.String"/>
<parameter name="postalCode" type="java.lang.String"/>
<parameter name="country" type="java.lang.String"/>
<parameter name="phone" type="java.lang.String"/>
<parameter name="fax" type="java.lang.String"/>
<parameter name="whereCustomerID" type="java.lang.String"/>
</parameters>
<query><![CDATA[UPDATE "Customers"
   SET CompanyName = #companyName, ContactName = #contactName, ContactTitle = #contactTitle, Address = #address, City = #city, Region = #region, PostalCode = #postalCode, Country = #country, Phone = #phone, Fax = #fax
 WHERE CustomerID = #whereCustomerID]]></query>
</query-invoker>
<query-invoker name="SimpleCustomersDelete" single="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
</parameters>
<query><![CDATA[DELETE FROM "Customers"
 WHERE CustomerID = #customerID]]></query>
</query-invoker>
<query-iterator name="SimpleDtpropertiesSelect" single="true">
<parameters>
<parameter name="id" type="int"/>
<parameter name="property" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT id, objectid, property, value, uvalue, version
  FROM "dtproperties"
 WHERE id = #id
   AND property = #property]]></query>
</query-iterator>
<query-iterator name="SimpleDtpropertiesSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="id" type="int"/>
<parameter name="property" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT id, objectid, property, value, uvalue, lvalue, version
  FROM "dtproperties" WITH (UPDLOCK)
 WHERE id = #id
   AND property = #property]]></query>
</query-iterator>
<query-iterator name="SimpleDtpropertiesColumnLvalue" single="false">
<parameters>
<parameter name="id" type="int"/>
<parameter name="property" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT lvalue
 FROM "dtproperties"
 WHERE id = #id
   AND property = #property]]></query>
</query-iterator>
<query-invoker name="SimpleDtpropertiesInsert" single="true">
<parameters>
<parameter name="id" type="int"/>
<parameter name="objectid" type="java.lang.Integer"/>
<parameter name="property" type="java.lang.String"/>
<parameter name="value" type="java.lang.String"/>
<parameter name="uvalue" type="java.lang.String"/>
<parameter name="lvalue" type="java.io.InputStream"/>
<parameter name="version" type="int"/>
</parameters>
<query><![CDATA[INSERT
  INTO "dtproperties"
       (id, objectid, property, value, uvalue, lvalue, version)
VALUES
       (#id, #objectid, #property, #value, #uvalue, #lvalue, #version)]]></query>
</query-invoker>
<query-invoker name="SimpleDtpropertiesInsertNoNulls" single="true">
<parameters>
<parameter name="id" type="int"/>
<parameter name="property" type="java.lang.String"/>
<parameter name="version" type="int"/>
</parameters>
<query><![CDATA[INSERT
  INTO "dtproperties"
       (id, property, version)
VALUES
       (#id, #property, #version)]]></query>
</query-invoker>
<query-invoker name="SimpleDtpropertiesUpdate" single="true">
<parameters>
<parameter name="objectid" type="java.lang.Integer"/>
<parameter name="value" type="java.lang.String"/>
<parameter name="uvalue" type="java.lang.String"/>
<parameter name="lvalue" type="java.io.InputStream"/>
<parameter name="version" type="int"/>
<parameter name="whereid" type="int"/>
<parameter name="whereproperty" type="java.lang.String"/>
</parameters>
<query><![CDATA[UPDATE "dtproperties"
   SET objectid = #objectid, value = #value, uvalue = #uvalue, lvalue = #lvalue, version = #version
 WHERE id = #whereid
   AND property = #whereproperty]]></query>
</query-invoker>
<query-invoker name="SimpleDtpropertiesDelete" single="true">
<parameters>
<parameter name="id" type="int"/>
<parameter name="property" type="java.lang.String"/>
</parameters>
<query><![CDATA[DELETE FROM "dtproperties"
 WHERE id = #id
   AND property = #property]]></query>
</query-invoker>
<query-iterator name="SimpleEmployeesSelect" single="true">
<parameters>
<parameter name="employeeID" type="int"/>
</parameters>
<query><![CDATA[SELECT EmployeeID, LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, City, Region, PostalCode, Country, HomePhone, Extension, ReportsTo, PhotoPath
  FROM "Employees"
 WHERE EmployeeID = #employeeID]]></query>
</query-iterator>
<query-iterator name="SimpleEmployeesSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="employeeID" type="int"/>
</parameters>
<query><![CDATA[SELECT EmployeeID, LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, City, Region, PostalCode, Country, HomePhone, Extension, Photo, Notes, ReportsTo, PhotoPath
  FROM "Employees" WITH (UPDLOCK)
 WHERE EmployeeID = #employeeID]]></query>
</query-iterator>
<query-iterator name="SimpleEmployeesColumnPhoto" single="false">
<parameters>
<parameter name="employeeID" type="int"/>
</parameters>
<query><![CDATA[SELECT Photo
 FROM "Employees"
 WHERE EmployeeID = #employeeID]]></query>
</query-iterator>
<query-iterator name="SimpleEmployeesColumnNotes" single="false">
<parameters>
<parameter name="employeeID" type="int"/>
</parameters>
<query><![CDATA[SELECT Notes
 FROM "Employees"
 WHERE EmployeeID = #employeeID]]></query>
</query-iterator>
<query-invoker name="SimpleEmployeesInsert" single="true">
<parameters>
<parameter name="employeeID" type="int"/>
<parameter name="lastName" type="java.lang.String"/>
<parameter name="firstName" type="java.lang.String"/>
<parameter name="title" type="java.lang.String"/>
<parameter name="titleOfCourtesy" type="java.lang.String"/>
<parameter name="birthDate" type="java.util.Date"/>
<parameter name="hireDate" type="java.util.Date"/>
<parameter name="address" type="java.lang.String"/>
<parameter name="city" type="java.lang.String"/>
<parameter name="region" type="java.lang.String"/>
<parameter name="postalCode" type="java.lang.String"/>
<parameter name="country" type="java.lang.String"/>
<parameter name="homePhone" type="java.lang.String"/>
<parameter name="extension" type="java.lang.String"/>
<parameter name="photo" type="java.io.InputStream"/>
<parameter name="notes" type="java.io.Reader"/>
<parameter name="reportsTo" type="java.lang.Integer"/>
<parameter name="photoPath" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Employees"
       (EmployeeID, LastName, FirstName, Title, TitleOfCourtesy, BirthDate, HireDate, Address, City, Region, PostalCode, Country, HomePhone, Extension, Photo, Notes, ReportsTo, PhotoPath)
VALUES
       (#employeeID, #lastName, #firstName, #title, #titleOfCourtesy, #birthDate, #hireDate, #address, #city, #region, #postalCode, #country, #homePhone, #extension, #photo, #notes, #reportsTo, #photoPath)]]></query>
</query-invoker>
<query-invoker name="SimpleEmployeesInsertNoNulls" single="true">
<parameters>
<parameter name="employeeID" type="int"/>
<parameter name="lastName" type="java.lang.String"/>
<parameter name="firstName" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Employees"
       (EmployeeID, LastName, FirstName)
VALUES
       (#employeeID, #lastName, #firstName)]]></query>
</query-invoker>
<query-invoker name="SimpleEmployeesUpdate" single="true">
<parameters>
<parameter name="lastName" type="java.lang.String"/>
<parameter name="firstName" type="java.lang.String"/>
<parameter name="title" type="java.lang.String"/>
<parameter name="titleOfCourtesy" type="java.lang.String"/>
<parameter name="birthDate" type="java.util.Date"/>
<parameter name="hireDate" type="java.util.Date"/>
<parameter name="address" type="java.lang.String"/>
<parameter name="city" type="java.lang.String"/>
<parameter name="region" type="java.lang.String"/>
<parameter name="postalCode" type="java.lang.String"/>
<parameter name="country" type="java.lang.String"/>
<parameter name="homePhone" type="java.lang.String"/>
<parameter name="extension" type="java.lang.String"/>
<parameter name="photo" type="java.io.InputStream"/>
<parameter name="notes" type="java.io.Reader"/>
<parameter name="reportsTo" type="java.lang.Integer"/>
<parameter name="photoPath" type="java.lang.String"/>
<parameter name="whereEmployeeID" type="int"/>
</parameters>
<query><![CDATA[UPDATE "Employees"
   SET LastName = #lastName, FirstName = #firstName, Title = #title, TitleOfCourtesy = #titleOfCourtesy, BirthDate = #birthDate, HireDate = #hireDate, Address = #address, City = #city, Region = #region, PostalCode = #postalCode, Country = #country, HomePhone = #homePhone, Extension = #extension, Photo = #photo, Notes = #notes, ReportsTo = #reportsTo, PhotoPath = #photoPath
 WHERE EmployeeID = #whereEmployeeID]]></query>
</query-invoker>
<query-invoker name="SimpleEmployeesDelete" single="true">
<parameters>
<parameter name="employeeID" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "Employees"
 WHERE EmployeeID = #employeeID]]></query>
</query-invoker>
<query-iterator name="SimpleEmployeeTerritoriesSelect" single="true">
<parameters>
<parameter name="employeeID" type="int"/>
<parameter name="territoryID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT EmployeeID, TerritoryID
  FROM "EmployeeTerritories"
 WHERE EmployeeID = #employeeID
   AND TerritoryID = #territoryID]]></query>
</query-iterator>
<query-iterator name="SimpleEmployeeTerritoriesSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="employeeID" type="int"/>
<parameter name="territoryID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT EmployeeID, TerritoryID
  FROM "EmployeeTerritories" WITH (UPDLOCK)
 WHERE EmployeeID = #employeeID
   AND TerritoryID = #territoryID]]></query>
</query-iterator>
<query-invoker name="SimpleEmployeeTerritoriesInsert" single="true">
<parameters>
<parameter name="employeeID" type="int"/>
<parameter name="territoryID" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "EmployeeTerritories"
       (EmployeeID, TerritoryID)
VALUES
       (#employeeID, #territoryID)]]></query>
</query-invoker>
<query-invoker name="SimpleEmployeeTerritoriesDelete" single="true">
<parameters>
<parameter name="employeeID" type="int"/>
<parameter name="territoryID" type="java.lang.String"/>
</parameters>
<query><![CDATA[DELETE FROM "EmployeeTerritories"
 WHERE EmployeeID = #employeeID
   AND TerritoryID = #territoryID]]></query>
</query-invoker>
<query-iterator name="SimpleOrderDetailsSelect" single="true">
<parameters>
<parameter name="orderID" type="int"/>
<parameter name="productID" type="int"/>
</parameters>
<query><![CDATA[SELECT OrderID, ProductID, UnitPrice, Quantity, Discount
  FROM "Order Details"
 WHERE OrderID = #orderID
   AND ProductID = #productID]]></query>
</query-iterator>
<query-iterator name="SimpleOrderDetailsSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="orderID" type="int"/>
<parameter name="productID" type="int"/>
</parameters>
<query><![CDATA[SELECT OrderID, ProductID, UnitPrice, Quantity, Discount
  FROM "Order Details" WITH (UPDLOCK)
 WHERE OrderID = #orderID
   AND ProductID = #productID]]></query>
</query-iterator>
<query-invoker name="SimpleOrderDetailsInsert" single="true">
<parameters>
<parameter name="orderID" type="int"/>
<parameter name="productID" type="int"/>
<parameter name="unitPrice" type="java.math.BigDecimal"/>
<parameter name="quantity" type="short"/>
<parameter name="discount" type="float"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Order Details"
       (OrderID, ProductID, UnitPrice, Quantity, Discount)
VALUES
       (#orderID, #productID, #unitPrice, #quantity, #discount)]]></query>
</query-invoker>
<query-invoker name="SimpleOrderDetailsUpdate" single="true">
<parameters>
<parameter name="unitPrice" type="java.math.BigDecimal"/>
<parameter name="quantity" type="short"/>
<parameter name="discount" type="float"/>
<parameter name="whereOrderID" type="int"/>
<parameter name="whereProductID" type="int"/>
</parameters>
<query><![CDATA[UPDATE "Order Details"
   SET UnitPrice = #unitPrice, Quantity = #quantity, Discount = #discount
 WHERE OrderID = #whereOrderID
   AND ProductID = #whereProductID]]></query>
</query-invoker>
<query-invoker name="SimpleOrderDetailsDelete" single="true">
<parameters>
<parameter name="orderID" type="int"/>
<parameter name="productID" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "Order Details"
 WHERE OrderID = #orderID
   AND ProductID = #productID]]></query>
</query-invoker>
<query-iterator name="SimpleOrdersSelect" single="true">
<parameters>
<parameter name="orderID" type="int"/>
</parameters>
<query><![CDATA[SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia, Freight, ShipName, ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry
  FROM "Orders"
 WHERE OrderID = #orderID]]></query>
</query-iterator>
<query-iterator name="SimpleOrdersSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="orderID" type="int"/>
</parameters>
<query><![CDATA[SELECT OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia, Freight, ShipName, ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry
  FROM "Orders" WITH (UPDLOCK)
 WHERE OrderID = #orderID]]></query>
</query-iterator>
<query-invoker name="SimpleOrdersInsert" single="true">
<parameters>
<parameter name="orderID" type="int"/>
<parameter name="customerID" type="java.lang.String"/>
<parameter name="employeeID" type="java.lang.Integer"/>
<parameter name="orderDate" type="java.util.Date"/>
<parameter name="requiredDate" type="java.util.Date"/>
<parameter name="shippedDate" type="java.util.Date"/>
<parameter name="shipVia" type="java.lang.Integer"/>
<parameter name="freight" type="java.math.BigDecimal"/>
<parameter name="shipName" type="java.lang.String"/>
<parameter name="shipAddress" type="java.lang.String"/>
<parameter name="shipCity" type="java.lang.String"/>
<parameter name="shipRegion" type="java.lang.String"/>
<parameter name="shipPostalCode" type="java.lang.String"/>
<parameter name="shipCountry" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Orders"
       (OrderID, CustomerID, EmployeeID, OrderDate, RequiredDate, ShippedDate, ShipVia, Freight, ShipName, ShipAddress, ShipCity, ShipRegion, ShipPostalCode, ShipCountry)
VALUES
       (#orderID, #customerID, #employeeID, #orderDate, #requiredDate, #shippedDate, #shipVia, #freight, #shipName, #shipAddress, #shipCity, #shipRegion, #shipPostalCode, #shipCountry)]]></query>
</query-invoker>
<query-invoker name="SimpleOrdersInsertNoNulls" single="true">
<parameters>
<parameter name="orderID" type="int"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Orders"
       (OrderID)
VALUES
       (#orderID)]]></query>
</query-invoker>
<query-invoker name="SimpleOrdersUpdate" single="true">
<parameters>
<parameter name="customerID" type="java.lang.String"/>
<parameter name="employeeID" type="java.lang.Integer"/>
<parameter name="orderDate" type="java.util.Date"/>
<parameter name="requiredDate" type="java.util.Date"/>
<parameter name="shippedDate" type="java.util.Date"/>
<parameter name="shipVia" type="java.lang.Integer"/>
<parameter name="freight" type="java.math.BigDecimal"/>
<parameter name="shipName" type="java.lang.String"/>
<parameter name="shipAddress" type="java.lang.String"/>
<parameter name="shipCity" type="java.lang.String"/>
<parameter name="shipRegion" type="java.lang.String"/>
<parameter name="shipPostalCode" type="java.lang.String"/>
<parameter name="shipCountry" type="java.lang.String"/>
<parameter name="whereOrderID" type="int"/>
</parameters>
<query><![CDATA[UPDATE "Orders"
   SET CustomerID = #customerID, EmployeeID = #employeeID, OrderDate = #orderDate, RequiredDate = #requiredDate, ShippedDate = #shippedDate, ShipVia = #shipVia, Freight = #freight, ShipName = #shipName, ShipAddress = #shipAddress, ShipCity = #shipCity, ShipRegion = #shipRegion, ShipPostalCode = #shipPostalCode, ShipCountry = #shipCountry
 WHERE OrderID = #whereOrderID]]></query>
</query-invoker>
<query-invoker name="SimpleOrdersDelete" single="true">
<parameters>
<parameter name="orderID" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "Orders"
 WHERE OrderID = #orderID]]></query>
</query-invoker>
<query-iterator name="SimpleProductsSelect" single="true">
<parameters>
<parameter name="productID" type="int"/>
</parameters>
<query><![CDATA[SELECT ProductID, ProductName, SupplierID, CategoryID, QuantityPerUnit, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel, Discontinued
  FROM "Products"
 WHERE ProductID = #productID]]></query>
</query-iterator>
<query-iterator name="SimpleProductsSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="productID" type="int"/>
</parameters>
<query><![CDATA[SELECT ProductID, ProductName, SupplierID, CategoryID, QuantityPerUnit, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel, Discontinued
  FROM "Products" WITH (UPDLOCK)
 WHERE ProductID = #productID]]></query>
</query-iterator>
<query-invoker name="SimpleProductsInsert" single="true">
<parameters>
<parameter name="productID" type="int"/>
<parameter name="productName" type="java.lang.String"/>
<parameter name="supplierID" type="java.lang.Integer"/>
<parameter name="categoryID" type="java.lang.Integer"/>
<parameter name="quantityPerUnit" type="java.lang.String"/>
<parameter name="unitPrice" type="java.math.BigDecimal"/>
<parameter name="unitsInStock" type="java.lang.Short"/>
<parameter name="unitsOnOrder" type="java.lang.Short"/>
<parameter name="reorderLevel" type="java.lang.Short"/>
<parameter name="discontinued" type="boolean"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Products"
       (ProductID, ProductName, SupplierID, CategoryID, QuantityPerUnit, UnitPrice, UnitsInStock, UnitsOnOrder, ReorderLevel, Discontinued)
VALUES
       (#productID, #productName, #supplierID, #categoryID, #quantityPerUnit, #unitPrice, #unitsInStock, #unitsOnOrder, #reorderLevel, #discontinued)]]></query>
</query-invoker>
<query-invoker name="SimpleProductsInsertNoNulls" single="true">
<parameters>
<parameter name="productID" type="int"/>
<parameter name="productName" type="java.lang.String"/>
<parameter name="discontinued" type="boolean"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Products"
       (ProductID, ProductName, Discontinued)
VALUES
       (#productID, #productName, #discontinued)]]></query>
</query-invoker>
<query-invoker name="SimpleProductsUpdate" single="true">
<parameters>
<parameter name="productName" type="java.lang.String"/>
<parameter name="supplierID" type="java.lang.Integer"/>
<parameter name="categoryID" type="java.lang.Integer"/>
<parameter name="quantityPerUnit" type="java.lang.String"/>
<parameter name="unitPrice" type="java.math.BigDecimal"/>
<parameter name="unitsInStock" type="java.lang.Short"/>
<parameter name="unitsOnOrder" type="java.lang.Short"/>
<parameter name="reorderLevel" type="java.lang.Short"/>
<parameter name="discontinued" type="boolean"/>
<parameter name="whereProductID" type="int"/>
</parameters>
<query><![CDATA[UPDATE "Products"
   SET ProductName = #productName, SupplierID = #supplierID, CategoryID = #categoryID, QuantityPerUnit = #quantityPerUnit, UnitPrice = #unitPrice, UnitsInStock = #unitsInStock, UnitsOnOrder = #unitsOnOrder, ReorderLevel = #reorderLevel, Discontinued = #discontinued
 WHERE ProductID = #whereProductID]]></query>
</query-invoker>
<query-invoker name="SimpleProductsDelete" single="true">
<parameters>
<parameter name="productID" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "Products"
 WHERE ProductID = #productID]]></query>
</query-invoker>
<query-iterator name="SimpleRegionSelect" single="true">
<parameters>
<parameter name="regionID" type="int"/>
</parameters>
<query><![CDATA[SELECT RegionID, RegionDescription
  FROM "Region"
 WHERE RegionID = #regionID]]></query>
</query-iterator>
<query-iterator name="SimpleRegionSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="regionID" type="int"/>
</parameters>
<query><![CDATA[SELECT RegionID, RegionDescription
  FROM "Region" WITH (UPDLOCK)
 WHERE RegionID = #regionID]]></query>
</query-iterator>
<query-invoker name="SimpleRegionInsert" single="true">
<parameters>
<parameter name="regionID" type="int"/>
<parameter name="regionDescription" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Region"
       (RegionID, RegionDescription)
VALUES
       (#regionID, #regionDescription)]]></query>
</query-invoker>
<query-invoker name="SimpleRegionUpdate" single="true">
<parameters>
<parameter name="regionDescription" type="java.lang.String"/>
<parameter name="whereRegionID" type="int"/>
</parameters>
<query><![CDATA[UPDATE "Region"
   SET RegionDescription = #regionDescription
 WHERE RegionID = #whereRegionID]]></query>
</query-invoker>
<query-invoker name="SimpleRegionDelete" single="true">
<parameters>
<parameter name="regionID" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "Region"
 WHERE RegionID = #regionID]]></query>
</query-invoker>
<query-iterator name="SimpleShippersSelect" single="true">
<parameters>
<parameter name="shipperID" type="int"/>
</parameters>
<query><![CDATA[SELECT ShipperID, CompanyName, Phone
  FROM "Shippers"
 WHERE ShipperID = #shipperID]]></query>
</query-iterator>
<query-iterator name="SimpleShippersSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="shipperID" type="int"/>
</parameters>
<query><![CDATA[SELECT ShipperID, CompanyName, Phone
  FROM "Shippers" WITH (UPDLOCK)
 WHERE ShipperID = #shipperID]]></query>
</query-iterator>
<query-invoker name="SimpleShippersInsert" single="true">
<parameters>
<parameter name="shipperID" type="int"/>
<parameter name="companyName" type="java.lang.String"/>
<parameter name="phone" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Shippers"
       (ShipperID, CompanyName, Phone)
VALUES
       (#shipperID, #companyName, #phone)]]></query>
</query-invoker>
<query-invoker name="SimpleShippersInsertNoNulls" single="true">
<parameters>
<parameter name="shipperID" type="int"/>
<parameter name="companyName" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Shippers"
       (ShipperID, CompanyName)
VALUES
       (#shipperID, #companyName)]]></query>
</query-invoker>
<query-invoker name="SimpleShippersUpdate" single="true">
<parameters>
<parameter name="companyName" type="java.lang.String"/>
<parameter name="phone" type="java.lang.String"/>
<parameter name="whereShipperID" type="int"/>
</parameters>
<query><![CDATA[UPDATE "Shippers"
   SET CompanyName = #companyName, Phone = #phone
 WHERE ShipperID = #whereShipperID]]></query>
</query-invoker>
<query-invoker name="SimpleShippersDelete" single="true">
<parameters>
<parameter name="shipperID" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "Shippers"
 WHERE ShipperID = #shipperID]]></query>
</query-invoker>
<query-iterator name="SimpleSuppliersSelect" single="true">
<parameters>
<parameter name="supplierID" type="int"/>
</parameters>
<query><![CDATA[SELECT SupplierID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax
  FROM "Suppliers"
 WHERE SupplierID = #supplierID]]></query>
</query-iterator>
<query-iterator name="SimpleSuppliersSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="supplierID" type="int"/>
</parameters>
<query><![CDATA[SELECT SupplierID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, HomePage
  FROM "Suppliers" WITH (UPDLOCK)
 WHERE SupplierID = #supplierID]]></query>
</query-iterator>
<query-iterator name="SimpleSuppliersColumnHomePage" single="false">
<parameters>
<parameter name="supplierID" type="int"/>
</parameters>
<query><![CDATA[SELECT HomePage
 FROM "Suppliers"
 WHERE SupplierID = #supplierID]]></query>
</query-iterator>
<query-invoker name="SimpleSuppliersInsert" single="true">
<parameters>
<parameter name="supplierID" type="int"/>
<parameter name="companyName" type="java.lang.String"/>
<parameter name="contactName" type="java.lang.String"/>
<parameter name="contactTitle" type="java.lang.String"/>
<parameter name="address" type="java.lang.String"/>
<parameter name="city" type="java.lang.String"/>
<parameter name="region" type="java.lang.String"/>
<parameter name="postalCode" type="java.lang.String"/>
<parameter name="country" type="java.lang.String"/>
<parameter name="phone" type="java.lang.String"/>
<parameter name="fax" type="java.lang.String"/>
<parameter name="homePage" type="java.io.Reader"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Suppliers"
       (SupplierID, CompanyName, ContactName, ContactTitle, Address, City, Region, PostalCode, Country, Phone, Fax, HomePage)
VALUES
       (#supplierID, #companyName, #contactName, #contactTitle, #address, #city, #region, #postalCode, #country, #phone, #fax, #homePage)]]></query>
</query-invoker>
<query-invoker name="SimpleSuppliersInsertNoNulls" single="true">
<parameters>
<parameter name="supplierID" type="int"/>
<parameter name="companyName" type="java.lang.String"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Suppliers"
       (SupplierID, CompanyName)
VALUES
       (#supplierID, #companyName)]]></query>
</query-invoker>
<query-invoker name="SimpleSuppliersUpdate" single="true">
<parameters>
<parameter name="companyName" type="java.lang.String"/>
<parameter name="contactName" type="java.lang.String"/>
<parameter name="contactTitle" type="java.lang.String"/>
<parameter name="address" type="java.lang.String"/>
<parameter name="city" type="java.lang.String"/>
<parameter name="region" type="java.lang.String"/>
<parameter name="postalCode" type="java.lang.String"/>
<parameter name="country" type="java.lang.String"/>
<parameter name="phone" type="java.lang.String"/>
<parameter name="fax" type="java.lang.String"/>
<parameter name="homePage" type="java.io.Reader"/>
<parameter name="whereSupplierID" type="int"/>
</parameters>
<query><![CDATA[UPDATE "Suppliers"
   SET CompanyName = #companyName, ContactName = #contactName, ContactTitle = #contactTitle, Address = #address, City = #city, Region = #region, PostalCode = #postalCode, Country = #country, Phone = #phone, Fax = #fax, HomePage = #homePage
 WHERE SupplierID = #whereSupplierID]]></query>
</query-invoker>
<query-invoker name="SimpleSuppliersDelete" single="true">
<parameters>
<parameter name="supplierID" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "Suppliers"
 WHERE SupplierID = #supplierID]]></query>
</query-invoker>
<query-iterator name="SimpleTerritoriesSelect" single="true">
<parameters>
<parameter name="territoryID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT TerritoryID, TerritoryDescription, RegionID
  FROM "Territories"
 WHERE TerritoryID = #territoryID]]></query>
</query-iterator>
<query-iterator name="SimpleTerritoriesSelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="territoryID" type="java.lang.String"/>
</parameters>
<query><![CDATA[SELECT TerritoryID, TerritoryDescription, RegionID
  FROM "Territories" WITH (UPDLOCK)
 WHERE TerritoryID = #territoryID]]></query>
</query-iterator>
<query-invoker name="SimpleTerritoriesInsert" single="true">
<parameters>
<parameter name="territoryID" type="java.lang.String"/>
<parameter name="territoryDescription" type="java.lang.String"/>
<parameter name="regionID" type="int"/>
</parameters>
<query><![CDATA[INSERT
  INTO "Territories"
       (TerritoryID, TerritoryDescription, RegionID)
VALUES
       (#territoryID, #territoryDescription, #regionID)]]></query>
</query-invoker>
<query-invoker name="SimpleTerritoriesUpdate" single="true">
<parameters>
<parameter name="territoryDescription" type="java.lang.String"/>
<parameter name="regionID" type="int"/>
<parameter name="whereTerritoryID" type="java.lang.String"/>
</parameters>
<query><![CDATA[UPDATE "Territories"
   SET TerritoryDescription = #territoryDescription, RegionID = #regionID
 WHERE TerritoryID = #whereTerritoryID]]></query>
</query-invoker>
<query-invoker name="SimpleTerritoriesDelete" single="true">
<parameters>
<parameter name="territoryID" type="java.lang.String"/>
</parameters>
<query><![CDATA[DELETE FROM "Territories"
 WHERE TerritoryID = #territoryID]]></query>
</query-invoker>
<query-iterator name="SimpleTestBlancoDbTable1Select" single="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[SELECT ColIntNotNull, ColIntNull, ColShortNotNull, ColShortNull, ColBigIntNotNull, ColBigIntNull, ColRealNotNull, ColRealNull, ColFloatNotNull, ColFloatNull, ColNumeric20NotNull, ColNumeric20Null, ColDecimal15NotNull, ColDecimal15Null, ColDecimal153NotNull, ColDecimal153Null, ColBitNotNull, ColBitNull, ColChar1NotNull, ColChar1Null, ColChar2NotNull, ColChar2Null, ColChar10NotNull, ColChar10Null, ColNChar10NotNull, ColNChar10Null, ColVarchar10NotNull, ColVarchar10Null, ColVarchar255NotNull, ColVarchar255Null, ColVarchar1000Null, ColNVarchar255NotNull, ColNVarchar255Null, ColDatetimeNotNull, ColDatetimeNull
  FROM "TestBlancoDbTable1"
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-iterator>
<query-iterator name="SimpleTestBlancoDbTable1SelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[SELECT ColIntNotNull, ColIntNull, ColShortNotNull, ColShortNull, ColBigIntNotNull, ColBigIntNull, ColRealNotNull, ColRealNull, ColFloatNotNull, ColFloatNull, ColNumeric20NotNull, ColNumeric20Null, ColDecimal15NotNull, ColDecimal15Null, ColDecimal153NotNull, ColDecimal153Null, ColBitNotNull, ColBitNull, ColBinary100NotNull, ColBinary100Null, ColImageNotNull, ColImageNull, ColChar1NotNull, ColChar1Null, ColChar2NotNull, ColChar2Null, ColChar10NotNull, ColChar10Null, ColNChar10NotNull, ColNChar10Null, ColVarchar10NotNull, ColVarchar10Null, ColVarchar255NotNull, ColVarchar255Null, ColVarchar1000Null, ColNVarchar255NotNull, ColNVarchar255Null, ColNtext, ColDatetimeNotNull, ColDatetimeNull
  FROM "TestBlancoDbTable1" WITH (UPDLOCK)
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-iterator>
<query-iterator name="SimpleTestBlancoDbTable1ColumnColBinary100NotNull" single="false">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[SELECT ColBinary100NotNull
 FROM "TestBlancoDbTable1"
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-iterator>
<query-iterator name="SimpleTestBlancoDbTable1ColumnColBinary100Null" single="false">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[SELECT ColBinary100Null
 FROM "TestBlancoDbTable1"
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-iterator>
<query-iterator name="SimpleTestBlancoDbTable1ColumnColImageNotNull" single="false">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[SELECT ColImageNotNull
 FROM "TestBlancoDbTable1"
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-iterator>
<query-iterator name="SimpleTestBlancoDbTable1ColumnColImageNull" single="false">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[SELECT ColImageNull
 FROM "TestBlancoDbTable1"
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-iterator>
<query-iterator name="SimpleTestBlancoDbTable1ColumnColNtext" single="false">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[SELECT ColNtext
 FROM "TestBlancoDbTable1"
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-iterator>
<query-invoker name="SimpleTestBlancoDbTable1Insert" single="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
<parameter name="colIntNull" type="java.lang.Integer"/>
<parameter name="colShortNotNull" type="short"/>
<parameter name="colShortNull" type="java.lang.Short"/>
<parameter name="colBigIntNotNull" type="long"/>
<parameter name="colBigIntNull" type="java.lang.Long"/>
<parameter name="colRealNotNull" type="float"/>
<parameter name="colRealNull" type="java.lang.Float"/>
<parameter name="colFloatNotNull" type="double"/>
<parameter name="colFloatNull" type="java.lang.Double"/>
<parameter name="colNumeric20NotNull" type="java.math.BigDecimal"/>
<parameter name="colNumeric20Null" type="java.math.BigDecimal"/>
<parameter name="colDecimal15NotNull" type="java.math.BigDecimal"/>
<parameter name="colDecimal15Null" type="java.math.BigDecimal"/>
<parameter name="colDecimal153NotNull" type="java.math.BigDecimal"/>
<parameter name="colDecimal153Null" type="java.math.BigDecimal"/>
<parameter name="colBitNotNull" type="boolean"/>
<parameter name="colBitNull" type="java.lang.Boolean"/>
<parameter name="colBinary100NotNull" type="java.io.InputStream"/>
<parameter name="colBinary100Null" type="java.io.InputStream"/>
<parameter name="colImageNotNull" type="java.io.InputStream"/>
<parameter name="colImageNull" type="java.io.InputStream"/>
<parameter name="colChar1NotNull" type="java.lang.String"/>
<parameter name="colChar1Null" type="java.lang.String"/>
<parameter name="colChar2NotNull" type="java.lang.String"/>
<parameter name="colChar2Null" type="java.lang.String"/>
<parameter name="colChar10NotNull" type="java.lang.String"/>
<parameter name="colChar10Null" type="java.lang.String"/>
<parameter name="colNChar10NotNull" type="java.lang.String"/>
<parameter name="colNChar10Null" type="java.lang.String"/>
<parameter name="colVarchar10NotNull" type="java.lang.String"/>
<parameter name="colVarchar10Null" type="java.lang.String"/>
<parameter name="colVarchar255NotNull" type="java.lang.String"/>
<parameter name="colVarchar255Null" type="java.lang.String"/>
<parameter name="colVarchar1000Null" type="java.lang.String"/>
<parameter name="colNVarchar255NotNull" type="java.lang.String"/>
<parameter name="colNVarchar255Null" type="java.lang.String"/>
<parameter name="colNtext" type="java.io.Reader"/>
<parameter name="colDatetimeNotNull" type="java.util.Date"/>
<parameter name="colDatetimeNull" type="java.util.Date"/>
</parameters>
<query><![CDATA[INSERT
  INTO "TestBlancoDbTable1"
       (ColIntNotNull, ColIntNull, ColShortNotNull, ColShortNull, ColBigIntNotNull, ColBigIntNull, ColRealNotNull, ColRealNull, ColFloatNotNull, ColFloatNull, ColNumeric20NotNull, ColNumeric20Null, ColDecimal15NotNull, ColDecimal15Null, ColDecimal153NotNull, ColDecimal153Null, ColBitNotNull, ColBitNull, ColBinary100NotNull, ColBinary100Null, ColImageNotNull, ColImageNull, ColChar1NotNull, ColChar1Null, ColChar2NotNull, ColChar2Null, ColChar10NotNull, ColChar10Null, ColNChar10NotNull, ColNChar10Null, ColVarchar10NotNull, ColVarchar10Null, ColVarchar255NotNull, ColVarchar255Null, ColVarchar1000Null, ColNVarchar255NotNull, ColNVarchar255Null, ColNtext, ColDatetimeNotNull, ColDatetimeNull)
VALUES
       (#colIntNotNull, #colIntNull, #colShortNotNull, #colShortNull, #colBigIntNotNull, #colBigIntNull, #colRealNotNull, #colRealNull, #colFloatNotNull, #colFloatNull, #colNumeric20NotNull, #colNumeric20Null, #colDecimal15NotNull, #colDecimal15Null, #colDecimal153NotNull, #colDecimal153Null, #colBitNotNull, #colBitNull, #colBinary100NotNull, #colBinary100Null, #colImageNotNull, #colImageNull, #colChar1NotNull, #colChar1Null, #colChar2NotNull, #colChar2Null, #colChar10NotNull, #colChar10Null, #colNChar10NotNull, #colNChar10Null, #colVarchar10NotNull, #colVarchar10Null, #colVarchar255NotNull, #colVarchar255Null, #colVarchar1000Null, #colNVarchar255NotNull, #colNVarchar255Null, #colNtext, #colDatetimeNotNull, #colDatetimeNull)]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable1InsertNoNulls" single="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
<parameter name="colShortNotNull" type="short"/>
<parameter name="colBigIntNotNull" type="long"/>
<parameter name="colRealNotNull" type="float"/>
<parameter name="colFloatNotNull" type="double"/>
<parameter name="colNumeric20NotNull" type="java.math.BigDecimal"/>
<parameter name="colDecimal15NotNull" type="java.math.BigDecimal"/>
<parameter name="colDecimal153NotNull" type="java.math.BigDecimal"/>
<parameter name="colBitNotNull" type="boolean"/>
<parameter name="colBinary100NotNull" type="java.io.InputStream"/>
<parameter name="colImageNotNull" type="java.io.InputStream"/>
<parameter name="colChar1NotNull" type="java.lang.String"/>
<parameter name="colChar2NotNull" type="java.lang.String"/>
<parameter name="colChar10NotNull" type="java.lang.String"/>
<parameter name="colNChar10NotNull" type="java.lang.String"/>
<parameter name="colVarchar10NotNull" type="java.lang.String"/>
<parameter name="colVarchar255NotNull" type="java.lang.String"/>
<parameter name="colNVarchar255NotNull" type="java.lang.String"/>
<parameter name="colDatetimeNotNull" type="java.util.Date"/>
</parameters>
<query><![CDATA[INSERT
  INTO "TestBlancoDbTable1"
       (ColIntNotNull, ColShortNotNull, ColBigIntNotNull, ColRealNotNull, ColFloatNotNull, ColNumeric20NotNull, ColDecimal15NotNull, ColDecimal153NotNull, ColBitNotNull, ColBinary100NotNull, ColImageNotNull, ColChar1NotNull, ColChar2NotNull, ColChar10NotNull, ColNChar10NotNull, ColVarchar10NotNull, ColVarchar255NotNull, ColNVarchar255NotNull, ColDatetimeNotNull)
VALUES
       (#colIntNotNull, #colShortNotNull, #colBigIntNotNull, #colRealNotNull, #colFloatNotNull, #colNumeric20NotNull, #colDecimal15NotNull, #colDecimal153NotNull, #colBitNotNull, #colBinary100NotNull, #colImageNotNull, #colChar1NotNull, #colChar2NotNull, #colChar10NotNull, #colNChar10NotNull, #colVarchar10NotNull, #colVarchar255NotNull, #colNVarchar255NotNull, #colDatetimeNotNull)]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable1Update" single="true">
<parameters>
<parameter name="colIntNull" type="java.lang.Integer"/>
<parameter name="colShortNotNull" type="short"/>
<parameter name="colShortNull" type="java.lang.Short"/>
<parameter name="colBigIntNotNull" type="long"/>
<parameter name="colBigIntNull" type="java.lang.Long"/>
<parameter name="colRealNotNull" type="float"/>
<parameter name="colRealNull" type="java.lang.Float"/>
<parameter name="colFloatNotNull" type="double"/>
<parameter name="colFloatNull" type="java.lang.Double"/>
<parameter name="colNumeric20NotNull" type="java.math.BigDecimal"/>
<parameter name="colNumeric20Null" type="java.math.BigDecimal"/>
<parameter name="colDecimal15NotNull" type="java.math.BigDecimal"/>
<parameter name="colDecimal15Null" type="java.math.BigDecimal"/>
<parameter name="colDecimal153NotNull" type="java.math.BigDecimal"/>
<parameter name="colDecimal153Null" type="java.math.BigDecimal"/>
<parameter name="colBitNotNull" type="boolean"/>
<parameter name="colBitNull" type="java.lang.Boolean"/>
<parameter name="colBinary100NotNull" type="java.io.InputStream"/>
<parameter name="colBinary100Null" type="java.io.InputStream"/>
<parameter name="colImageNotNull" type="java.io.InputStream"/>
<parameter name="colImageNull" type="java.io.InputStream"/>
<parameter name="colChar1NotNull" type="java.lang.String"/>
<parameter name="colChar1Null" type="java.lang.String"/>
<parameter name="colChar2NotNull" type="java.lang.String"/>
<parameter name="colChar2Null" type="java.lang.String"/>
<parameter name="colChar10NotNull" type="java.lang.String"/>
<parameter name="colChar10Null" type="java.lang.String"/>
<parameter name="colNChar10NotNull" type="java.lang.String"/>
<parameter name="colNChar10Null" type="java.lang.String"/>
<parameter name="colVarchar10NotNull" type="java.lang.String"/>
<parameter name="colVarchar10Null" type="java.lang.String"/>
<parameter name="colVarchar255NotNull" type="java.lang.String"/>
<parameter name="colVarchar255Null" type="java.lang.String"/>
<parameter name="colVarchar1000Null" type="java.lang.String"/>
<parameter name="colNVarchar255NotNull" type="java.lang.String"/>
<parameter name="colNVarchar255Null" type="java.lang.String"/>
<parameter name="colNtext" type="java.io.Reader"/>
<parameter name="colDatetimeNotNull" type="java.util.Date"/>
<parameter name="colDatetimeNull" type="java.util.Date"/>
<parameter name="whereColIntNotNull" type="int"/>
</parameters>
<query><![CDATA[UPDATE "TestBlancoDbTable1"
   SET ColIntNull = #colIntNull, ColShortNotNull = #colShortNotNull, ColShortNull = #colShortNull, ColBigIntNotNull = #colBigIntNotNull, ColBigIntNull = #colBigIntNull, ColRealNotNull = #colRealNotNull, ColRealNull = #colRealNull, ColFloatNotNull = #colFloatNotNull, ColFloatNull = #colFloatNull, ColNumeric20NotNull = #colNumeric20NotNull, ColNumeric20Null = #colNumeric20Null, ColDecimal15NotNull = #colDecimal15NotNull, ColDecimal15Null = #colDecimal15Null, ColDecimal153NotNull = #colDecimal153NotNull, ColDecimal153Null = #colDecimal153Null, ColBitNotNull = #colBitNotNull, ColBitNull = #colBitNull, ColBinary100NotNull = #colBinary100NotNull, ColBinary100Null = #colBinary100Null, ColImageNotNull = #colImageNotNull, ColImageNull = #colImageNull, ColChar1NotNull = #colChar1NotNull, ColChar1Null = #colChar1Null, ColChar2NotNull = #colChar2NotNull, ColChar2Null = #colChar2Null, ColChar10NotNull = #colChar10NotNull, ColChar10Null = #colChar10Null, ColNChar10NotNull = #colNChar10NotNull, ColNChar10Null = #colNChar10Null, ColVarchar10NotNull = #colVarchar10NotNull, ColVarchar10Null = #colVarchar10Null, ColVarchar255NotNull = #colVarchar255NotNull, ColVarchar255Null = #colVarchar255Null, ColVarchar1000Null = #colVarchar1000Null, ColNVarchar255NotNull = #colNVarchar255NotNull, ColNVarchar255Null = #colNVarchar255Null, ColNtext = #colNtext, ColDatetimeNotNull = #colDatetimeNotNull, ColDatetimeNull = #colDatetimeNull
 WHERE ColIntNotNull = #whereColIntNotNull]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable1Delete" single="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "TestBlancoDbTable1"
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-invoker>
<query-iterator name="SimpleTestBlancoDbTable2Select" single="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[SELECT ColIntNotNull, ColIntNull, ColTinyIntNotNull, ColTinyIntNull, ColShortNotNull, ColShortNull, ColBigIntNotNull, ColBigIntNull
  FROM "TestBlancoDbTable2"
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-iterator>
<query-iterator name="SimpleTestBlancoDbTable2SelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[SELECT ColIntNotNull, ColIntNull, ColTinyIntNotNull, ColTinyIntNull, ColShortNotNull, ColShortNull, ColBigIntNotNull, ColBigIntNull
  FROM "TestBlancoDbTable2" WITH (UPDLOCK)
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-iterator>
<query-invoker name="SimpleTestBlancoDbTable2Insert" single="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
<parameter name="colIntNull" type="java.lang.Integer"/>
<parameter name="colTinyIntNotNull" type="byte"/>
<parameter name="colTinyIntNull" type="java.lang.Byte"/>
<parameter name="colShortNotNull" type="short"/>
<parameter name="colShortNull" type="java.lang.Short"/>
<parameter name="colBigIntNotNull" type="long"/>
<parameter name="colBigIntNull" type="java.lang.Long"/>
</parameters>
<query><![CDATA[INSERT
  INTO "TestBlancoDbTable2"
       (ColIntNotNull, ColIntNull, ColTinyIntNotNull, ColTinyIntNull, ColShortNotNull, ColShortNull, ColBigIntNotNull, ColBigIntNull)
VALUES
       (#colIntNotNull, #colIntNull, #colTinyIntNotNull, #colTinyIntNull, #colShortNotNull, #colShortNull, #colBigIntNotNull, #colBigIntNull)]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable2InsertNoNulls" single="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
<parameter name="colTinyIntNotNull" type="byte"/>
<parameter name="colShortNotNull" type="short"/>
<parameter name="colBigIntNotNull" type="long"/>
</parameters>
<query><![CDATA[INSERT
  INTO "TestBlancoDbTable2"
       (ColIntNotNull, ColTinyIntNotNull, ColShortNotNull, ColBigIntNotNull)
VALUES
       (#colIntNotNull, #colTinyIntNotNull, #colShortNotNull, #colBigIntNotNull)]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable2Update" single="true">
<parameters>
<parameter name="colIntNull" type="java.lang.Integer"/>
<parameter name="colTinyIntNotNull" type="byte"/>
<parameter name="colTinyIntNull" type="java.lang.Byte"/>
<parameter name="colShortNotNull" type="short"/>
<parameter name="colShortNull" type="java.lang.Short"/>
<parameter name="colBigIntNotNull" type="long"/>
<parameter name="colBigIntNull" type="java.lang.Long"/>
<parameter name="whereColIntNotNull" type="int"/>
</parameters>
<query><![CDATA[UPDATE "TestBlancoDbTable2"
   SET ColIntNull = #colIntNull, ColTinyIntNotNull = #colTinyIntNotNull, ColTinyIntNull = #colTinyIntNull, ColShortNotNull = #colShortNotNull, ColShortNull = #colShortNull, ColBigIntNotNull = #colBigIntNotNull, ColBigIntNull = #colBigIntNull
 WHERE ColIntNotNull = #whereColIntNotNull]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable2Delete" single="true">
<parameters>
<parameter name="colIntNotNull" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "TestBlancoDbTable2"
 WHERE ColIntNotNull = #colIntNotNull]]></query>
</query-invoker>
<query-iterator name="SimpleTestBlancoDbTable3Select" single="true">
<parameters>
<parameter name="aB" type="int"/>
</parameters>
<query><![CDATA[SELECT a_b, b__c, c___d, d____e, _e_f, g, h_
  FROM "TestBlancoDbTable3"
 WHERE a_b = #aB]]></query>
</query-iterator>
<query-iterator name="SimpleTestBlancoDbTable3SelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="aB" type="int"/>
</parameters>
<query><![CDATA[SELECT a_b, b__c, c___d, d____e, _e_f, g, h_
  FROM "TestBlancoDbTable3" WITH (UPDLOCK)
 WHERE a_b = #aB]]></query>
</query-iterator>
<query-invoker name="SimpleTestBlancoDbTable3Insert" single="true">
<parameters>
<parameter name="aB" type="int"/>
<parameter name="bC" type="java.lang.Integer"/>
<parameter name="cD" type="byte"/>
<parameter name="dE" type="java.lang.Byte"/>
<parameter name="eF" type="short"/>
<parameter name="g" type="java.lang.Short"/>
<parameter name="h" type="long"/>
</parameters>
<query><![CDATA[INSERT
  INTO "TestBlancoDbTable3"
       (a_b, b__c, c___d, d____e, _e_f, g, h_)
VALUES
       (#aB, #bC, #cD, #dE, #eF, #g, #h)]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable3InsertNoNulls" single="true">
<parameters>
<parameter name="aB" type="int"/>
<parameter name="cD" type="byte"/>
<parameter name="eF" type="short"/>
<parameter name="h" type="long"/>
</parameters>
<query><![CDATA[INSERT
  INTO "TestBlancoDbTable3"
       (a_b, c___d, _e_f, h_)
VALUES
       (#aB, #cD, #eF, #h)]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable3Update" single="true">
<parameters>
<parameter name="bC" type="java.lang.Integer"/>
<parameter name="cD" type="byte"/>
<parameter name="dE" type="java.lang.Byte"/>
<parameter name="eF" type="short"/>
<parameter name="g" type="java.lang.Short"/>
<parameter name="h" type="long"/>
<parameter name="wherea_b" type="int"/>
</parameters>
<query><![CDATA[UPDATE "TestBlancoDbTable3"
   SET b__c = #bC, c___d = #cD, d____e = #dE, _e_f = #eF, g = #g, h_ = #h
 WHERE a_b = #wherea_b]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable3Delete" single="true">
<parameters>
<parameter name="aB" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "TestBlancoDbTable3"
 WHERE a_b = #aB]]></query>
</query-invoker>
<query-iterator name="SimpleTestBlancoDbTable4Select" single="true">
<parameters>
<parameter name="列名１" type="int"/>
</parameters>
<query><![CDATA[SELECT 列名１, 列名２, 日本語名
  FROM "テストブランコＤｂ表4"
 WHERE 列名１ = #列名１]]></query>
</query-iterator>
<query-iterator name="SimpleTestBlancoDbTable4SelectUpdatable" scroll="false" single="false" updatable="true">
<parameters>
<parameter name="列名１" type="int"/>
</parameters>
<query><![CDATA[SELECT 列名１, 列名２, 日本語名
  FROM "テストブランコＤｂ表4" WITH (UPDLOCK)
 WHERE 列名１ = #列名１]]></query>
</query-iterator>
<query-invoker name="SimpleTestBlancoDbTable4Insert" single="true">
<parameters>
<parameter name="列名１" type="int"/>
<parameter name="列名２" type="java.lang.Integer"/>
<parameter name="日本語名" type="byte"/>
</parameters>
<query><![CDATA[INSERT
  INTO "テストブランコＤｂ表4"
       (列名１, 列名２, 日本語名)
VALUES
       (#列名１, #列名２, #日本語名)]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable4InsertNoNulls" single="true">
<parameters>
<parameter name="列名１" type="int"/>
<parameter name="日本語名" type="byte"/>
</parameters>
<query><![CDATA[INSERT
  INTO "テストブランコＤｂ表4"
       (列名１, 日本語名)
VALUES
       (#列名１, #日本語名)]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable4Update" single="true">
<parameters>
<parameter name="列名２" type="java.lang.Integer"/>
<parameter name="日本語名" type="byte"/>
<parameter name="where列名１" type="int"/>
</parameters>
<query><![CDATA[UPDATE "テストブランコＤｂ表4"
   SET 列名２ = #列名２, 日本語名 = #日本語名
 WHERE 列名１ = #where列名１]]></query>
</query-invoker>
<query-invoker name="SimpleTestBlancoDbTable4Delete" single="true">
<parameters>
<parameter name="列名１" type="int"/>
</parameters>
<query><![CDATA[DELETE FROM "テストブランコＤｂ表4"
 WHERE 列名１ = #列名１]]></query>
</query-invoker>
</blanco-db>
